=DawinsLaw - Genetic Algorithm Gem

!!VERY MUCH UNDER CONSTRUCTION!!

Darwins Law is a gem to enable you to use a genetic algorithm and just focus on the behaviour/characteristics you are trying to evolve.

This is still being developed and I've not quite decided on what the interface will be like, but it will be something like

  require 'darwins_law'
  ga = GeneticAlgorithm.new(:gene_length => 10, :popsize => 30, :fitness => Proc.new{|genome|
    #add code to evaluate genome and return fitness score (as int/float)
    genome.inject{|i,j| i + j} #for the simplest fitness func ever!
  })
  ga.evolve


There are a number of different GA classes which will provide variations on the basic principle of evolution.

GeneticAlgorithm::Base
::Base inherits the core evolutionary logic from DarwinianProcess and provides generic initialization logic.

GeneticAlgorithm::Caching
::Caching inherits ::Base and adds a fitness caching process to reduce GA runtime.


GeneticAlgorithm::Standard
GeneticAlgorithm::Microbial
Both inherit from ::Caching and differ only in which 'breeding_type' they use and some setup values.

Both could be made from an initialized ::Base GA ie ::Microbial is like;

  ga = GeneticAlgorith::Base.new(<args>)
  ga.extend FitnessCaching
  ga.breeding_type = :microbial
  ga.cross_over_rate = 0.7
